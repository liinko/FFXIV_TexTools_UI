//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FFXIV_TexTools.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class UIMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UIMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FFXIV_TexTools.Resources.UIMessages", typeof(UIMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add more texture part.
        /// </summary>
        internal static string AddNewTexturePartErrorMessage {
            get {
                return ResourceManager.GetString("AddNewTexturePartErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently only supports &quot;Gear&quot;, &quot;Character&quot;, please contact esrin if necessary..
        /// </summary>
        internal static string AddNewTexturePartErrorMessageWrongCategoryOfItem {
            get {
                return ResourceManager.GetString("AddNewTexturePartErrorMessageWrongCategoryOfItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Face Paint&quot;,&quot;Equipment Decals&quot; Unsupported..
        /// </summary>
        internal static string AddNewTexturePartErrorMessageWrongItemCategoryOfItem {
            get {
                return ResourceManager.GetString("AddNewTexturePartErrorMessageWrongItemCategoryOfItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Add New Texture Part.
        /// </summary>
        internal static string AddNewTexturePartErrorTitle {
            get {
                return ResourceManager.GetString("AddNewTexturePartErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to add diffuse mapping?
        ///Selecting Yes will add a diffuse map, and selecting No will add a default map..
        /// </summary>
        internal static string AddNewTexturePartQuestionMessage {
            get {
                return ResourceManager.GetString("AddNewTexturePartQuestionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Diffuse Mapping.
        /// </summary>
        internal static string AddNewTexturePartQuestionTitle {
            get {
                return ResourceManager.GetString("AddNewTexturePartQuestionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Import Error.
        /// </summary>
        internal static string AdvancedImportErrorTitle {
            get {
                return ResourceManager.GetString("AdvancedImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error building Advanced Import Window.
        ///
        ///{0}.
        /// </summary>
        internal static string AdvancedImportWindowErrorMessage {
            get {
                return ResourceManager.GetString("AdvancedImportWindowErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The index files have been successfully backed up..
        /// </summary>
        internal static string BackupCompleteMessage {
            get {
                return ResourceManager.GetString("BackupCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Complete.
        /// </summary>
        internal static string BackupCompleteTitle {
            get {
                return ResourceManager.GetString("BackupCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create backup files.
        ///
        ///Error Message:
        ///{0}.
        /// </summary>
        internal static string BackupFailedErrorMessage {
            get {
                return ResourceManager.GetString("BackupFailedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Creation Failed.
        /// </summary>
        internal static string BackupFailedTitle {
            get {
                return ResourceManager.GetString("BackupFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Files Missing.
        /// </summary>
        internal static string BackupFilesMissingTitle {
            get {
                return ResourceManager.GetString("BackupFilesMissingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Accessing Index Backups Folder
        ///
        ///Please set your Index Backups directory in Options &gt; Customize and try again.
        ///.
        /// </summary>
        internal static string BackupFolderAccessErrorMessage {
            get {
                return ResourceManager.GetString("BackupFolderAccessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find backup directory.
        /// </summary>
        internal static string BackupsDirectoryErrorMessage {
            get {
                return ResourceManager.GetString("BackupsDirectoryErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ColorSet BMP import is not supported..
        /// </summary>
        internal static string ColorSetBMPNotSupportedMessage {
            get {
                return ResourceManager.GetString("ColorSetBMPNotSupportedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will create a backup of the commonly modified index files (0a, 01, 04, 06)
        ///
        ///
        ///Do you want to Backup Now?
        ///
        ///
        ///Warning:
        ///In order to create a clean backup, all active modifications will be set to disabled, they will have to be re-enabled manually..
        /// </summary>
        internal static string CreateBackupsMessage {
            get {
                return ResourceManager.GetString("CreateBackupsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Index Files.
        /// </summary>
        internal static string CreateBackupsTitle {
            get {
                return ResourceManager.GetString("CreateBackupsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Backup?.
        /// </summary>
        internal static string CreateBackupTitle {
            get {
                return ResourceManager.GetString("CreateBackupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to export the model as a dae.
        ///
        ///{0}.
        /// </summary>
        internal static string DAEExportErrorMessage {
            get {
                return ResourceManager.GetString("DAEExportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error exporting DAE.
        /// </summary>
        internal static string DAEExportErrorTitle {
            get {
                return ResourceManager.GetString("DAEExportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to import the model.
        ///
        ///{0}.
        /// </summary>
        internal static string DAEImportErrorMessage {
            get {
                return ResourceManager.GetString("DAEImportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Importing DAE.
        /// </summary>
        internal static string DAEImportErrorTitle {
            get {
                return ResourceManager.GetString("DAEImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to read the DAE file.
        ///
        ///Error: {0}.
        /// </summary>
        internal static string DAEReadErrorMessage {
            get {
                return ResourceManager.GetString("DAEReadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Reading DAE.
        /// </summary>
        internal static string DAEReadErrorTitle {
            get {
                return ResourceManager.GetString("DAEReadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing was entered for ModPack Description
        ///
        ///Description will be left empty..
        /// </summary>
        internal static string DefaultDescriptionMessage {
            get {
                return ResourceManager.GetString("DefaultDescriptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing was entered for ModPack Author
        ///
        ///Author will default to &quot;TexTools User&quot;.
        /// </summary>
        internal static string DefaultModPackAuthorMessage {
            get {
                return ResourceManager.GetString("DefaultModPackAuthorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing was entered for ModPack Name
        ///
        ///ModPack Name will default to &quot;ModPack&quot;.
        /// </summary>
        internal static string DefaultModPackNameMessage {
            get {
                return ResourceManager.GetString("DefaultModPackNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing was entered for ModPack Version
        ///
        ///Version will default to &quot;1.0.0&quot;.
        /// </summary>
        internal static string DefaultModPackVersionMessage {
            get {
                return ResourceManager.GetString("DefaultModPackVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will delete the entire group, and all the options in it..
        /// </summary>
        internal static string DeleteGroupMessage {
            get {
                return ResourceManager.GetString("DeleteGroupMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Deletion Warning.
        /// </summary>
        internal static string DeleteGroupTitle {
            get {
                return ResourceManager.GetString("DeleteGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caution: This will delete all the mods for the currently selected Mod Pack.
        ///
        ///This process is not reversible, do you want to continue?.
        /// </summary>
        internal static string DeleteModPackMessage {
            get {
                return ResourceManager.GetString("DeleteModPackMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Pack Deletion Warning..
        /// </summary>
        internal static string DeleteModPackTitle {
            get {
                return ResourceManager.GetString("DeleteModPackTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TexTools was unable to locate dependency files.
        ///Please make sure you are running TexTools in the folder it came in.
        ///
        ///If you continue to receive this error,
        ///Please make sure your Anti-Virus is not blocking TexTools.
        ///
        ///Error: {0}
        ///
        ///Exception:{1}.
        /// </summary>
        internal static string DependencyErrorMessage {
            get {
                return ResourceManager.GetString("DependencyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies Error v{0}.
        /// </summary>
        internal static string DependencyErrorTitle {
            get {
                return ResourceManager.GetString("DependencyErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will Disable all mods located in the modlist.
        ///
        ///Are you sure you want to proceed?.
        /// </summary>
        internal static string DisableAllModsMessage {
            get {
                return ResourceManager.GetString("DisableAllModsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All Mods.
        /// </summary>
        internal static string DisableAllModsTitle {
            get {
                return ResourceManager.GetString("DisableAllModsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling Mods.
        /// </summary>
        internal static string DisablingModsTitle {
            get {
                return ResourceManager.GetString("DisablingModsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TTMP file [ {0} ] is empty.
        ///
        ///Importing Canceled..
        /// </summary>
        internal static string EmptyTTMPFileErrorMessage {
            get {
                return ResourceManager.GetString("EmptyTTMPFileErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will Enable all mods located in the modlist.
        ///
        ///Are you sure you want to proceed?.
        /// </summary>
        internal static string EnableAllModsMessage {
            get {
                return ResourceManager.GetString("EnableAllModsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable All Mods.
        /// </summary>
        internal static string EnableAllModsTitle {
            get {
                return ResourceManager.GetString("EnableAllModsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling Mods.
        /// </summary>
        internal static string EnablingModsTitle {
            get {
                return ResourceManager.GetString("EnablingModsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were errors importing some mods..
        /// </summary>
        internal static string ErrorImportingModsMessage {
            get {
                return ResourceManager.GetString("ErrorImportingModsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Importing Mods.
        /// </summary>
        internal static string ErrorImportingModsTitle {
            get {
                return ResourceManager.GetString("ErrorImportingModsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to group already exists, please rename the group.
        ///
        ///If you would like to add to that group instead, go back and click the edit button..
        /// </summary>
        internal static string ExistingGroupMessage {
            get {
                return ResourceManager.GetString("ExistingGroupMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Name already exists..
        /// </summary>
        internal static string ExistingGroupTitle {
            get {
                return ResourceManager.GetString("ExistingGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Option already includes {0}
        ///
        ///Would you like to overwrite the existing mod for this option?.
        /// </summary>
        internal static string ExistingOption {
            get {
                return ResourceManager.GetString("ExistingOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TexTools was unable to determine the game version..
        /// </summary>
        internal static string GameVersionErrorMessage {
            get {
                return ResourceManager.GetString("GameVersionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Check Error {0}.
        /// </summary>
        internal static string GameVersionErrorTitle {
            get {
                return ResourceManager.GetString("GameVersionErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Complete.
        /// </summary>
        internal static string ImportCompleteTitle {
            get {
                return ResourceManager.GetString("ImportCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Error.
        /// </summary>
        internal static string ImportErrorTitle {
            get {
                return ResourceManager.GetString("ImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of Index Backup folder changed.
        ///
        ///New Location: {0}.
        /// </summary>
        internal static string IndexBackupLocationChangedMessage {
            get {
                return ResourceManager.GetString("IndexBackupLocationChangedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Backups Error.
        /// </summary>
        internal static string IndexBackupsErrorTitle {
            get {
                return ResourceManager.GetString("IndexBackupsErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create backup while game is running..
        /// </summary>
        internal static string IndexLockedBackupFailedMessage {
            get {
                return ResourceManager.GetString("IndexLockedBackupFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Accessing Index File
        ///
        ///
        ///Please exit the game before proceeding.
        ///-----------------------------------------------------.
        /// </summary>
        internal static string IndexLockedErrorMessage {
            get {
                return ResourceManager.GetString("IndexLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Access Error.
        /// </summary>
        internal static string IndexLockedErrorTitle {
            get {
                return ResourceManager.GetString("IndexLockedErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FFXIV install directory found at
        ///
        ///{0}
        ///
        ///Use this directory?.
        /// </summary>
        internal static string InstallDirectoryFoundMessage {
            get {
                return ResourceManager.GetString("InstallDirectoryFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Directory Found.
        /// </summary>
        internal static string InstallDirectoryFoundTitle {
            get {
                return ResourceManager.GetString("InstallDirectoryFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please locate the following directory.
        ///
        ///.../FINAL FANTASY XIV - A Realm Reborn/game/sqpack/ffxiv.
        /// </summary>
        internal static string InstallDirectoryNotFoundMessage {
            get {
                return ResourceManager.GetString("InstallDirectoryNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Directory Not Found.
        /// </summary>
        internal static string InstallDirectoryNotFoundTitle {
            get {
                return ResourceManager.GetString("InstallDirectoryNotFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot contain any of the following characters: \ / : * ? &quot; &lt; &gt;|.
        /// </summary>
        internal static string InvalidCharacterModpackNameMessage {
            get {
                return ResourceManager.GetString("InvalidCharacterModpackNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModPack Name Invalid.
        /// </summary>
        internal static string InvalidCharacterModpackNameTitle {
            get {
                return ResourceManager.GetString("InvalidCharacterModpackNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error getting the Items List
        ///
        ///{0}.
        /// </summary>
        internal static string ItemsListErrorMessage {
            get {
                return ResourceManager.GetString("ItemsListErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items List Error.
        /// </summary>
        internal static string ItemsListErrorTitle {
            get {
                return ResourceManager.GetString("ItemsListErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading data for the selected language, would you like to revert to English? 
        ///
        ///Language may be changed again later from the Language menu..
        /// </summary>
        internal static string LanguageError {
            get {
                return ResourceManager.GetString("LanguageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language Data Error.
        /// </summary>
        internal static string LanguageErrorTitle {
            get {
                return ResourceManager.GetString("LanguageErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Reading Material Data.
        /// </summary>
        internal static string MaterialDataReadErrorTitle {
            get {
                return ResourceManager.GetString("MaterialDataReadErrorTitle", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to modify the material..
        /// </summary>
        internal static string MaterialEditorErrorMessage {
            get {
                return ResourceManager.GetString("MaterialEditorErrorMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Material Editor Error.
        /// </summary>
        internal static string MaterialEditorErrorTitle {
            get {
                return ResourceManager.GetString("MaterialEditorErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading the material file {0}
        ///
        ///{1}.
        /// </summary>
        internal static string MaterialFileReadErrorMessage {
            get {
                return ResourceManager.GetString("MaterialFileReadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading the MDL file.
        ///
        ///{0}
        ///
        ///If this error appeared after importing, please submit a bug report with the DAE file attached..
        /// </summary>
        internal static string MDLReadErrorMessage {
            get {
                return ResourceManager.GetString("MDLReadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Reading Model Data.
        /// </summary>
        internal static string MDLReadErrorTitle {
            get {
                return ResourceManager.GetString("MDLReadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Reading Mod Data.
        /// </summary>
        internal static string ModDataReadErrorTitle {
            get {
                return ResourceManager.GetString("ModDataReadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error getting the model data for {0} | {1}.
        /// </summary>
        internal static string ModelDataErrorMessage {
            get {
                return ResourceManager.GetString("ModelDataErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to import the model.
        ///
        ///{0}.
        /// </summary>
        internal static string ModelImportErrorMessage {
            get {
                return ResourceManager.GetString("ModelImportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Importing DAE.
        /// </summary>
        internal static string ModelImportErrorTitle {
            get {
                return ResourceManager.GetString("ModelImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModList Disable Failed.
        /// </summary>
        internal static string ModListDisableFailedTitle {
            get {
                return ResourceManager.GetString("ModListDisableFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to continue while game is running.
        ///
        ///Please exit the game and try again..
        /// </summary>
        internal static string ModListIndexLockedErrorMessage {
            get {
                return ResourceManager.GetString("ModListIndexLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting ModPack.
        /// </summary>
        internal static string ModPack_Delete {
            get {
                return ResourceManager.GetString("ModPack_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ModPack ({0}.ttmp2) has been successfully Created..
        /// </summary>
        internal static string ModPackCreationCompleteMessage {
            get {
                return ResourceManager.GetString("ModPackCreationCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Pack Creation Complete.
        /// </summary>
        internal static string ModPackCreationCompleteTitle {
            get {
                return ResourceManager.GetString("ModPackCreationCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Mod Pack Creation Failed.
        /// </summary>
        internal static string ModPackCreationFailedErrorTitle {
            get {
                return ResourceManager.GetString("ModPackCreationFailedErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating ModPack.
        /// </summary>
        internal static string ModPackCreationMessage {
            get {
                return ResourceManager.GetString("ModPackCreationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error importing the mod pack at {0}
        ///
        ///Message: {1}.
        /// </summary>
        internal static string ModPackImportErrorMessage {
            get {
                return ResourceManager.GetString("ModPackImportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModPack Import Error.
        /// </summary>
        internal static string ModPackImportErrorTitle {
            get {
                return ResourceManager.GetString("ModPackImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing ModPack.
        /// </summary>
        internal static string ModPackImportTitle {
            get {
                return ResourceManager.GetString("ModPackImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading ModPack.
        /// </summary>
        internal static string ModPackLoadingTitle {
            get {
                return ResourceManager.GetString("ModPackLoadingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ModPack with this name already exists.
        ///
        ///Would you like to overwrite the existing ModPack?.
        /// </summary>
        internal static string ModPackOverwriteMessage {
            get {
                return ResourceManager.GetString("ModPackOverwriteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of ModPacks folder changed.
        ///
        ///
        ///New Location: {0}.
        /// </summary>
        internal static string ModPacksLocationChangedMessage {
            get {
                return ResourceManager.GetString("ModPacksLocationChangedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Mods were Disabled Successfully.
        /// </summary>
        internal static string ModsDisabledSuccessMessage {
            get {
                return ResourceManager.GetString("ModsDisabledSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Mods were Enabled Successfully.
        /// </summary>
        internal static string ModsEnabledSuccessMessage {
            get {
                return ResourceManager.GetString("ModsEnabledSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to toggle mod status..
        /// </summary>
        internal static string ModToggleErrorMessage {
            get {
                return ResourceManager.GetString("ModToggleErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Toggling Mod.
        /// </summary>
        internal static string ModToggleErrorTitle {
            get {
                return ResourceManager.GetString("ModToggleErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to move the existing data to the new location?.
        /// </summary>
        internal static string MoveDataMessage {
            get {
                return ResourceManager.GetString("MoveDataMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Data?.
        /// </summary>
        internal static string MoveDataTitle {
            get {
                return ResourceManager.GetString("MoveDataTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select new location of Index_Backups folder.
        /// </summary>
        internal static string NewBackupLocationTitle {
            get {
                return ResourceManager.GetString("NewBackupLocationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Directory.
        /// </summary>
        internal static string NewDirectoryTitle {
            get {
                return ResourceManager.GetString("NewDirectoryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A newer version of FFXIV was detected.
        ///Would you like to create a new backup of your index files now? (Recommended)
        ///
        ///Warning:
        ///In order to create a clean backup, all active modifications will be set to disabled, they will have to be re-enabled manually..
        /// </summary>
        internal static string NewerVersionDetectedBackupMessage {
            get {
                return ResourceManager.GetString("NewerVersionDetectedBackupMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New TexTools Install Detected.
        ///
        ///Would you like to create a new backup of your index files now? (Recommended).
        /// </summary>
        internal static string NewInstallDetectedBackupMessage {
            get {
                return ResourceManager.GetString("NewInstallDetectedBackupMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select new location of ModPacks folder.
        /// </summary>
        internal static string newModpacksLocationTitle {
            get {
                return ResourceManager.GetString("newModpacksLocationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select new location for Saved folder.
        /// </summary>
        internal static string NewSaveLocationTitle {
            get {
                return ResourceManager.GetString("NewSaveLocationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Author Found.
        /// </summary>
        internal static string NoAuthorFoundTitle {
            get {
                return ResourceManager.GetString("NoAuthorFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No backup files found in the following directory:
        ///{0}
        ///
        ///
        ///Index entries will be put back to original offsets instead
        ///-----------------------------------------------------.
        /// </summary>
        internal static string NoBackupsFoundErrorMessage {
            get {
                return ResourceManager.GetString("NoBackupsFoundErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Index Backups were found. 
        ///Would you like to create a new backup of your index files now? (Recommended) 
        ///
        ///Warning:
        ///In order to create a clean backup, all active modifications will be set to disabled, they will have to be re-enabled manually..
        /// </summary>
        internal static string NoBackupsFoundMessage {
            get {
                return ResourceManager.GetString("NoBackupsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Description Found.
        /// </summary>
        internal static string NoDescriptionFoundTitle {
            get {
                return ResourceManager.GetString("NoDescriptionFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mods were detected in the options list..
        /// </summary>
        internal static string NoModsDetectedErrorMessage {
            get {
                return ResourceManager.GetString("NoModsDetectedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Name Found.
        /// </summary>
        internal static string NoNameFoundTitle {
            get {
                return ResourceManager.GetString("NoNameFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a wizard modPack.
        /// </summary>
        internal static string NotWizardModPack {
            get {
                return ResourceManager.GetString("NotWizardModPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Version Found.
        /// </summary>
        internal static string NoVersionFoundTitle {
            get {
                return ResourceManager.GetString("NoVersionFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to disable a mod from previous version.
        ///
        ///Error Message:
        ///{0}
        ///
        ///It is recommended to do a Start Over from the previous version first..
        /// </summary>
        internal static string OldModListDisableFailedMessage {
            get {
                return ResourceManager.GetString("OldModListDisableFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Older ModList Found.
        /// </summary>
        internal static string OldModListFoundTitle {
            get {
                return ResourceManager.GetString("OldModListFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Older TexTools ModList Found.
        ///
        ///The Older ModList is incompatible with this version.
        ///
        ///In order to use this version, all previous mods will be disabled, and the previous ModList erased.
        ///
        ///
        ///If you would like to retain your mods, it is recommended that you create a backup ModPack in the older TexTools Version, then import it into this one.
        ///
        ///Would you like to continue?.
        /// </summary>
        internal static string OldTexToolsFoundMessage {
            get {
                return ResourceManager.GetString("OldTexToolsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Backups are outdated.
        ///
        ///
        ///Please create a new backup from Help &gt; Backup Index Files
        ///
        ///
        ///TexTools will attempt to start over without using backups..
        /// </summary>
        internal static string OutdatedBackupsErrorMessage {
            get {
                return ResourceManager.GetString("OutdatedBackupsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The install location chosen is out of date
        ///
        ///Please locate the following directory.
        ///
        ///.../FINAL FANTASY XIV - A Realm Reborn/game/sqpack/ffxiv.
        /// </summary>
        internal static string OutOfDateInstallMessage {
            get {
                return ResourceManager.GetString("OutOfDateInstallMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Directory Out Of Date.
        /// </summary>
        internal static string OutOfDateInstallTitle {
            get {
                return ResourceManager.GetString("OutOfDateInstallTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite?.
        /// </summary>
        internal static string OverwriteTitle {
            get {
                return ResourceManager.GetString("OverwriteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Stand By....
        /// </summary>
        internal static string PleaseStandByMessage {
            get {
                return ResourceManager.GetString("PleaseStandByMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Wait....
        /// </summary>
        internal static string PleaseWaitMessage {
            get {
                return ResourceManager.GetString("PleaseWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previous Version Error.
        /// </summary>
        internal static string PreviousVersionErrorTitle {
            get {
                return ResourceManager.GetString("PreviousVersionErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an issue checking Index Dat Counts.
        /// </summary>
        internal static string ProblemCheckDatIssueMessage {
            get {
                return ResourceManager.GetString("ProblemCheckDatIssueMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem Check Error.
        /// </summary>
        internal static string ProblemCheckErrorTitle {
            get {
                return ResourceManager.GetString("ProblemCheckErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an issue obtaining the Raw Data for the mod.
        ///
        ///Offset: {0}
        ///Data File: {1}.
        /// </summary>
        internal static string RawDataErrorMessage {
            get {
                return ResourceManager.GetString("RawDataErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of Saved folder changed.
        ///
        ///
        ///New Location: {0}.
        /// </summary>
        internal static string SavedLocationChangedMessage {
            get {
                return ResourceManager.GetString("SavedLocationChangedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select sqpack/ffxiv Folder.
        /// </summary>
        internal static string SelectffxivFolderTitle {
            get {
                return ResourceManager.GetString("SelectffxivFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start over process has been completed..
        /// </summary>
        internal static string StartOverCompleteMessage {
            get {
                return ResourceManager.GetString("StartOverCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Over Complete.
        /// </summary>
        internal static string StartOverCompleteTitle {
            get {
                return ResourceManager.GetString("StartOverCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error while starting over.
        ///
        ///Please check for problems by selecting Help -&gt; Check For Problems..
        /// </summary>
        internal static string StartOverErrorMessage {
            get {
                return ResourceManager.GetString("StartOverErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Starting Over.
        /// </summary>
        internal static string StartOverErrorTitle {
            get {
                return ResourceManager.GetString("StartOverErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting over will:
        ///
        ///Restore index files to their original state.
        ///Delete all mod dat files from game folder.
        ///Delete all mod list file entries.
        ///
        ///Do you want to start over?.
        /// </summary>
        internal static string StartOverMessage {
            get {
                return ResourceManager.GetString("StartOverMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Over.
        /// </summary>
        internal static string StartOverTitle {
            get {
                return ResourceManager.GetString("StartOverTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} mod(s) successfully imported..
        /// </summary>
        internal static string SuccessfulImportCountMessage {
            get {
                return ResourceManager.GetString("SuccessfulImportCountMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string SuccessTitle {
            get {
                return ResourceManager.GetString("SuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Reading Texture Data.
        /// </summary>
        internal static string TextureDataReadErrorTitle {
            get {
                return ResourceManager.GetString("TextureDataReadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading the texture file {0}.
        ///
        ///{1}.
        /// </summary>
        internal static string TextureFileReadErrorMessage {
            get {
                return ResourceManager.GetString("TextureFileReadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error Importing the Texture.
        ///
        ///Error Message:
        ///{0}.
        /// </summary>
        internal static string TextureImportErrorMessage {
            get {
                return ResourceManager.GetString("TextureImportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Importing Texture.
        /// </summary>
        internal static string TextureImportErrorTitle {
            get {
                return ResourceManager.GetString("TextureImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error attempting to toggle translucency
        ///
        ///{0}.
        /// </summary>
        internal static string TranslucencyToggleErrorMessage {
            get {
                return ResourceManager.GetString("TranslucencyToggleErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Toggling Translucency.
        /// </summary>
        internal static string TranslucencyToggleErrorTitle {
            get {
                return ResourceManager.GetString("TranslucencyToggleErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Data....
        /// </summary>
        internal static string TTMPGettingData {
            get {
                return ResourceManager.GetString("TTMPGettingData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update the viewport. 
        ///
        ///{0}.
        ///
        ///Any mod on the 3D model will be disabled..
        /// </summary>
        internal static string ViewportErrorMessage {
            get {
                return ResourceManager.GetString("ViewportErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Updating Viewport.
        /// </summary>
        internal static string ViewportErrorTitle {
            get {
                return ResourceManager.GetString("ViewportErrorTitle", resourceCulture);
            }
        }
    }
}
